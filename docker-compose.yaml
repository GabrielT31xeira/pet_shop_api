version: '3'

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./:/var/www/html"
    container_name: nginx
    depends_on:
      - php
    networks:
      - pet_shop_api

  php:
    build:
      context: .
      dockerfile: Dockerfile-php
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    volumes:
      - "./:/var/www/html"
    environment:
      - "DB_CONNECTION=pgsql"
      - "DB_HOST=database"
      - "DB_PORT=5432"
      - "DB_DATABASE=app"
      - "DB_USERNAME=app"
      - "DB_PASSWORD=!ChangeMe!"
    command: bash -c "composer install && cp .env.example .env && php artisan key:generate && php artisan migrate && php-fpm"
    depends_on:
      - database
    networks:
      - pet_shop_api

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    container_name: database
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - pet_shop_api
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  pet_shop_api:
